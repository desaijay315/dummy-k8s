---
- hosts: localhost
  become: true

  tasks:
    - name: ECR login
      # shell: "$(/usr/local/bin/aws ecr get-login --no-include-email --registry-ids 956193147942 --region ap-south-1)"
      # shell: "/usr/local/bin/aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 956193147942.dkr.ecr.ap-south-1.amazonaws.com"
      shell: " docker login -u AWS -p $(aws ecr get-login-password --region ap-south-1) 956193147942.dkr.ecr.ap-south-1.amazonaws.com"

    - name: Delete the latest image from the ECR
      shell: "/usr/local/bin/aws ecr batch-delete-image --repository-name nextjs --image-ids imageTag=latest"
      ignore_errors: yes

    - name: remove the image
      command: docker rmi 956193147942.dkr.ecr.ap-south-1.amazonaws.com/nextjs:latest
      ignore_errors: yes
  
    - name: docker pull
      command: docker pull 956193147942.dkr.ecr.ap-south-1.amazonaws.com/nextjs:latest
      ignore_errors: yes

    - name: build the images
      command: docker build -t nextjs .
      args:
        chdir: /opt/docker

    - name: tag the images
      command: docker tag nextjs:latest 956193147942.dkr.ecr.ap-south-1.amazonaws.com/nextjs:latest

    - name: push the image
      command: docker push 956193147942.dkr.ecr.ap-south-1.amazonaws.com/nextjs:latest
  # - name: pull the image
  #  command: docker pull 956193147942.dkr.ecr.ap-south-1.amazonaws.com/nextjs:latest
  # - name: stop the container
  #   command: docker stop nextjs-devops-container
  #   ignore_errors: yes

  #- name: stop rm container
  #command: docker rm nextjs-devops-container
  #ignore_errors: yes

  #- name: create container using nextjs devops image
  # command: docker run -d --name nextjs-devops-container -p 8080:8080 956193147942.dkr.ecr.ap-south-1.amazonaws.com/nextjs:latest
